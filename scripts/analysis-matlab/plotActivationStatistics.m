function plotActivationStatistics(stats)
%plotActivationStatistics - Generate plots and tables, given the activation statistics
%This function assumes that the devices list is available in:
%  "data/devices.txt"
%This script also assumes that the list of shows is available in:
%  "data/shows.txt".
%
%  INPUT
%    stats: statistics for all the devices and experiments, as generated by
%           the generateActivationStatisticsAll script.
%  OUTPUT
%    Plots and tables in output/*

set(0,'DefaultFigureVisible','off');

fileID=fopen('data/devices.txt');
devices=textscan(fileID,"%s");
devices=devices{1};
fclose(fileID);
showsMap=loadMap('data/shows.txt');
showsNames=keys(showsMap);
showsNames{end+1}="AVERAGE";

% PLOT TOTAL ACTIVATIONS FROM CAMERA (US vs UK)

totalActivationsCamera=[stats.totalActivationsCamera];
totalActivationsUK=[stats.totalActivationsUK];
intersection=[stats.totalActivationsCameraUK];
[~,ss]=sort(intersection);
ss(ss==3)=[];
 
plotBarDiagram('output/totalActivationsUSvsUK', ...
	'Number of misactivations detected by camera in US vs. UK sorted by difference', ...
	devices(ss), 'Number of distinct misactivations', ...
 	[totalActivationsUK(ss);totalActivationsCamera(ss);intersection(ss)]', ...
 	[], [], {'Total misactivations in the UK', ... 
            'Total misactivations in the US', ...
            'Cardinality of the intersection of misactivations between US and UK',}, ...
				'southoutside');

% PLOT ACTIVATIONS DURATIONS FROM CAMERA (US vs UK)

[~,ss]=sort(max([[stats.durationsQ3];[stats.durations2Q3]]),'descend');
ss(ss==3)=[]; % Remove Cortana
tt(1:2:20)=ss*2-1;
tt(2:2:20)=ss*2;
durationsP10(1:2:22)=[stats.durationsP10];
durationsQ1(1:2:22)=[stats.durationsQ1];
durationsQ2(1:2:22)=[stats.durationsQ2];
durationsQ3(1:2:22)=[stats.durationsQ3];
durationsP90(1:2:22)=[stats.durationsP90];
durationsP10(2:2:22)=[stats.durations2P10];
durationsQ1(2:2:22)=[stats.durations2Q1];
durationsQ2(2:2:22)=[stats.durations2Q2];
durationsQ3(2:2:22)=[stats.durations2Q3];
durationsP90(2:2:22)=[stats.durations2P90];
devicesWithNumber(1:2:22)=addCountToStrings(strcat(devices, ' US'), totalActivationsCamera);
devicesWithNumber(2:2:22)=addCountToStrings(strcat(devices, ' UK'), totalActivationsUK);

plotCandleDiagram('output/durationsRegional', ...
	'Duration of misactivations from camera (US vs UK, sorted by P75 duration)', ...
	devicesWithNumber(tt), 'Duration of misactivations (s)', ...
	[durationsP10(tt);durationsQ1(tt);durationsQ2(tt);durationsQ3(tt);durationsP90(tt)]', ...
	["US","UK"]);


% PLOT ACTIVATIONS REPEATABILITY FROM CAMERA (US)

[~,ss]=sort([stats.totalActivationsCamera]);
totalActivationsCamera=[stats.totalActivationsCamera];
Q1ConfidenceActivationsCamera=[stats.Q1ConfidenceActivationsCamera];
Q2ConfidenceActivationsCamera=[stats.Q2ConfidenceActivationsCamera];
Q3ConfidenceActivationsCamera=[stats.Q3ConfidenceActivationsCamera];
Q4ConfidenceActivationsCamera=[stats.Q4ConfidenceActivationsCamera];
plotBarDiagram('output/activationsCamera','Camera misactivations', ...
	devices(ss), 'Number of distinct misactivations', ...
	[Q4ConfidenceActivationsCamera(ss);Q3ConfidenceActivationsCamera(ss);Q2ConfidenceActivationsCamera(ss);Q1ConfidenceActivationsCamera(ss)]', [], ...
	[0.6350 0.0780 0.1840; 0.8500 0.3250 0.0980; 0.9290 0.6940 0.1250; 1 1 0]', ...
	{'76-100% Repeatability','51-75% Repeatability','26-50% Repeatability','0%-25% Repeatability'}, ...
	'best','stacked');

Q1ConfidenceActivationsCamera=[stats.Q1ConfidenceActivationsCamera]./totalActivationsCamera;
Q2ConfidenceActivationsCamera=[stats.Q2ConfidenceActivationsCamera]./totalActivationsCamera;
Q3ConfidenceActivationsCamera=[stats.Q3ConfidenceActivationsCamera]./totalActivationsCamera;
Q4ConfidenceActivationsCamera=[stats.Q4ConfidenceActivationsCamera]./totalActivationsCamera;
devicesWithNumber=addCountToStrings(devices,totalActivationsCamera);
[~,ss]=sort(Q4ConfidenceActivationsCamera*10000+Q3ConfidenceActivationsCamera*100+Q2ConfidenceActivationsCamera*10+Q1ConfidenceActivationsCamera);
plotBarDiagram('output/repeatabilityCamera','Camera misactivation repeatability', ...
	devicesWithNumber(ss), 'Fraction of distinct misactivations', ...
	[Q4ConfidenceActivationsCamera(ss);Q3ConfidenceActivationsCamera(ss);Q2ConfidenceActivationsCamera(ss);Q1ConfidenceActivationsCamera(ss)]', [], ...
	[0.6350 0.0780 0.1840; 0.8500 0.3250 0.0980; 0.9290 0.6940 0.1250; 1 1 0]', ...
	{'76-100% Repeatability','51-75% Repeatability','26-50% Repeatability','0%-25% Repeatability'}, ...
	'best','stacked');


% PLOT ACTIVATIONS CONFIRMATION FROM CLOUD (US)

totalActivationsCameraAll=[stats.totalActivationsCameraAll];
totalActivationsCloudAll=[stats.totalActivationsCloudAll];
totalActivationsCameraCloud=[stats.totalActivationsCameraCloud];
totalActivationsCameraAgg=[totalActivationsCameraAll(1) sum(totalActivationsCameraAll([4 6 8 10])) sum(totalActivationsCameraAll([5 7 9 11]))];
totalActivationsCloudAgg=[totalActivationsCloudAll(1) sum(totalActivationsCloudAll([4 6 8 10])) sum(totalActivationsCloudAll([5 7 9 11]))];
totalActivationsCameraAndCloudAgg=[totalActivationsCameraCloud(1) sum(totalActivationsCameraCloud([4 6 8 10])) sum(totalActivationsCameraCloud([5 7 9 11]))];
totalActivationsCameraOrCloudAgg=totalActivationsCameraAgg+totalActivationsCloudAgg-totalActivationsCameraAndCloudAgg;
devicesAgg={'google','echo2','echo3'};
devicesWithNumber=addCountToStrings(devicesAgg,totalActivationsCameraOrCloudAgg);
[~,ss]=sort(totalActivationsCameraAndCloudAgg./totalActivationsCameraOrCloudAgg);
data=[(totalActivationsCloudAgg(ss)-totalActivationsCameraAndCloudAgg(ss))./totalActivationsCameraOrCloudAgg(ss); ...
	(totalActivationsCameraAgg(ss)-totalActivationsCameraAndCloudAgg(ss))./totalActivationsCameraOrCloudAgg(ss); ...
	totalActivationsCameraAndCloudAgg(ss)./totalActivationsCameraOrCloudAgg(ss)]';
plotBarDiagram('output/confirmationCloud','Comparison of camera and cloud detection methods (sorted by Jaccard index)', ...
	devicesWithNumber(ss), 'Fraction of misactivations over the union of camera and cloud misactivations', ...
	data, ...
	data.*totalActivationsCameraOrCloudAgg(ss)', ...
	[],{
	 'Fraction of misactivations detected by cloud but not by camera', ...
	 'Fraction of misactivations detected by camera but not by cloud', ...	 
	 'Fraction of misactivations detected by camera and cloud'},'southoutside');


% PLOT ACTIVATIONS CONFIRMATION FROM TRAFFIC (US)

totalActivationsCameraAll=[stats.totalActivationsCameraAll];
totalActivationsTrafficAll=[stats.totalActivationsTrafficAll];
totalActivationsCameraTraffic=[stats.totalActivationsCameraTraffic];
totalActivationsCameraAgg=[totalActivationsCameraAll(1:3) sum(totalActivationsCameraAll([4 6 8 10])) sum(totalActivationsCameraAll([5 7 9 11]))];
totalActivationsTrafficAgg=[totalActivationsTrafficAll(1:3) sum(totalActivationsTrafficAll([4 6 8 10])) sum(totalActivationsTrafficAll([5 7 9 11]))];
totalActivationsCameraAndTrafficAgg=[totalActivationsCameraTraffic(1:3) sum(totalActivationsCameraTraffic([4 6 8 10])) sum(totalActivationsCameraTraffic([5 7 9 11]))];
totalActivationsCameraOrTrafficAgg=totalActivationsCameraAgg+totalActivationsTrafficAgg-totalActivationsCameraAndTrafficAgg;
devicesAgg={'google','homepod','invoke','echo2','echo3'};
devicesWithNumber=addCountToStrings(devicesAgg,totalActivationsCameraOrTrafficAgg);
[~,ss]=sort(totalActivationsCameraAndTrafficAgg./totalActivationsCameraOrTrafficAgg);
data=[(totalActivationsTrafficAgg(ss)-totalActivationsCameraAndTrafficAgg(ss))./totalActivationsCameraOrTrafficAgg(ss); ...
	(totalActivationsCameraAgg(ss)-totalActivationsCameraAndTrafficAgg(ss))./totalActivationsCameraOrTrafficAgg(ss); ...
	totalActivationsCameraAndTrafficAgg(ss)./totalActivationsCameraOrTrafficAgg(ss)]';
plotBarDiagram('output/confirmationTraffic', ...
	'Comparison of camera and traffic misactivation methods (sorted by Jaccard index)', ...
	devicesWithNumber(ss), 'Fraction of misactivations over the union of camera and traffic misactivations', ...
	data, data.*totalActivationsCameraOrTrafficAgg(ss)', ...
	[],{
	 'Fraction of misactivations detected by traffic but not by camera', ...
	 'Fraction of misactivations detected by camera but not by traffic', ...	 
	 'Fraction of misactivations detected by camera and traffic'},'southoutside');



% PLOT REPEATIBILITY TREND FROM CAMERA (US)

strongIncActivationsCameraRelative=[stats.strongIncActivationsCameraRelative];
incActivationsCameraRelative=[stats.incActivationsCameraRelative];
neutralActivationsCameraRelative=[stats.neutralActivationsCameraRelative];
decActivationsCameraRelative=[stats.decActivationsCameraRelative];
strongDecActivationsCameraRelative=[stats.strongDecActivationsCameraRelative];
devicesWithNumber=addCountToStrings(devices,totalActivationsCamera);
[~,ss]=sort(strongDecActivationsCameraRelative);
plotBarDiagram('output/trendCamera', ...
	'Repeatibility trend analysis of misactivations from camera (sorted by strong decreasing trend)', ...
	devicesWithNumber(ss), 'Fraction of distinct misactivations', ...
	[strongDecActivationsCameraRelative(ss);decActivationsCameraRelative(ss);neutralActivationsCameraRelative(ss); ...
	incActivationsCameraRelative(ss);strongIncActivationsCameraRelative(ss)]', [], ...
	[0 0.4470 0.7410;0.3010 0.7450 0.9330;1 1 1;0.9290 0.6940 0.1250;0.6350 0.0780 0.1840]',...
	{'Strong decreasing repeatibility trend (from 51-100% to 0-25%)', ...
	 'Weak decreasing repeatibility trend (from 51-100% to 0-50%)', ...
	 'Neutral repeatability trend (from 51-100% to 51-100%, from 0-50% to 0-50%)', ...
	 'Weak increasing repeatibility trend (from 0-50% to 51-100%)', ...
	 'Strong increasing repeatibility trend (from 0-50% to 75-100%)', ...
	 },'southoutside','stacked');



% PLOT OF DURATION ANALYSIS FROM CAMERA (US)

[~,ss]=sort([stats.durationsQ3],'descend');
durationsP10=[stats.durationsP10];
durationsQ1=[stats.durationsQ1];
durationsQ2=[stats.durationsQ2];
durationsQ3=[stats.durationsQ3];
durationsP90=[stats.durationsP90];
devicesWithNumber=addCountToStrings(devices,totalActivationsCamera);
plotCandleDiagram('output/durationsCamera', ...
	'Duration of misactivations from camera (sorted by P75 duration)', ...
	devicesWithNumber(ss), 'Duration of misactivations (s)', ...
	[durationsP10(ss);durationsQ1(ss);durationsQ2(ss);durationsQ3(ss);durationsP90(ss)]');


% GENERATE THE SHOWS LATEX TABLE
tableShows=string(showsNames)';
tableShows(end)="SUM";
wordsCount=round(reshape([stats.wordsCounts],12,11)/1000);
wordsCount=[wordsCount(:,1);sum(wordsCount(:,1))];
wordsCountString=strcat(string(wordsCount),"K");
totalTime=round(reshape([stats.totalTime],12,11)/3600);
totalTime=[totalTime(:,1);sum(totalTime(:,1))];
totalTimeString=strcat(string(totalTime),"h");
wordsPerMinutes=wordsCount.*1000./(totalTime.*60);
wordsPerMinutesString=strcat(string(round(wordsPerMinutes))," wpm");
tableShows(:,2)=totalTimeString;
tableShows(:,3)=wordsCountString;
tableShows(:,4)=wordsPerMinutesString;
matrix2latex("output/table_shows_auto.tex",tableShows,"","","\textbf{","}");


% PLOT SHOW ACTIVATION BY TIME FROM CAMERA (US)

generalDensity=reshape([stats.generalDensity],12,11)*60;
generalDensity=generalDensity(:,1)';
generalDensity(end+1)=mean(generalDensity);

[~,tt]=sort([stats.totalActivationsCamera],'descend');
colors=[0 0 1;1 0 0;0.5 0.5 0.5;0.9290 0.6940 0.1250;1 1 0;0.4660 0.6740 0.1880;0 1 0;0.3010 0.7450 0.9330;0 1 1;0.4940 0.1840 0.5560;1 0 1];
showsNamesWithDensity=addCountToStrings(showsNames,generalDensity,"wpm");

activationDensityDurations=reshape([stats.activationDensityDurations],12,11)*60*60;
activationDensityDurations(end+1,:)=mean(activationDensityDurations,1);
activationDensityDurationsTotal=sum(activationDensityDurations');
[~,ss]=sort(activationDensityDurationsTotal);
plotBarDiagram('output/showsActivationsByTime', ...
	'Number of misactivations with respect to time by show', ...
	showsNamesWithDensity(ss), 'Number of misactivations per hour', ...
 	activationDensityDurations(ss,tt), [], ...
	colors(tt,:)',...
	devices,'none','stacked');


% PLOT SHOW ACTIVATION BY WORDS FROM CAMERA (US)

activationDensityWordsCounts=reshape([stats.activationDensityWordsCounts],12,11)*10000;
activationDensityWordsCounts(end+1,:)=mean(activationDensityWordsCounts,1);
activationDensityWordsCountsTotal=sum(activationDensityWordsCounts');
[~,ss]=sort(activationDensityWordsCountsTotal);
plotBarDiagram('output/showsActivationsByWords', ...
	'Number of misactivations with respect to the number of words by show', ...
	showsNamesWithDensity(ss), 'Number of misactivations per 10,000 words', ...
 	activationDensityWordsCounts(ss,tt), [], ...
	colors(tt,:)',...
	devices,'best','stacked');


% GENERATE THE TABLE OF MOST MISACTIVATING SHOWS FROM CAMERA (US)

tableShowActivation=[string(devices); "ALL DEVICES"];
for ii=1:(length(devices)+1)
	if ii<=length(devices)
		activationDensityDuration=activationDensityDurations(1:(end-1),ii);
		activationDensityWordsCount=activationDensityWordsCounts(1:(end-1),ii);
	else
		activationDensityDuration=sum(activationDensityDurations(1:end-1,:),2);
		activationDensityWordsCount=sum(activationDensityWordsCounts(1:end-1,:),2);
	end
	sel=activationDensityDuration==max(activationDensityDuration);
	tableShowActivation(ii,2)=strcat(showsNames{sel}, ' (', sprintf("%.2f",activationDensityDuration(sel)), ')');
	
	sel=activationDensityWordsCount==max(activationDensityWordsCount);
	tableShowActivation(ii,3)=strcat(showsNames{sel}, ' (', sprintf("%.2f",activationDensityWordsCount(sel)), ')');
end
matrix2latex("output/table_activations_auto.tex",tableShowActivation,"","","\textbf{","}");

set(0,'DefaultFigureVisible','on');

end